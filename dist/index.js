"use strict";var F=function(n,r){return function(){return r||n((r={exports:{}}).exports,r),r.exports}};var L=F(function(me,k){"use strict";var K=require("@stdlib/assert-is-plain-object"),m=require("@stdlib/assert-has-own-property"),M=require("@stdlib/array-base-assert-contains"),Q=require("@stdlib/array-base-join"),D=require("@stdlib/string-format");function U(n,r,e){return K(e)?m(e,"dtype")&&(n.dtype=e.dtype,!M(r,n.dtype))?new TypeError(D('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"dtype",Q(r,'", "'),n.dtype)):(m(e,"order")&&(n.order=e.order),m(e,"mode")&&(n.mode=e.mode),m(e,"submode")&&(n.submode=e.submode),m(e,"readonly")&&(n.readonly=e.readonly),null):new TypeError(D("invalid argument. Options argument must be an object. Value: `%s`.",e))}k.exports=U});var J=F(function(he,H){"use strict";var R=require("@stdlib/utils-define-nonenumerable-read-only-property"),W=require("@stdlib/assert-is-nonnegative-integer-array").primitives,X=require("@stdlib/assert-is-empty-collection"),E=require("@stdlib/assert-is-ndarray-like"),B=require("@stdlib/assert-is-number").isPrimitive,Y=require("@stdlib/assert-is-function"),G=require("@stdlib/assert-is-complex-like"),Z=require("@stdlib/assert-is-plain-object"),$=require("@stdlib/assert-is-object"),P=require("@stdlib/assert-is-collection"),C=require("@stdlib/ndarray-base-assert-is-data-type"),ee=require("@stdlib/ndarray-base-assert-is-output-data-type-policy"),re=require("@stdlib/ndarray-base-assert-is-read-only"),te=require("@stdlib/ndarray-base-assert-is-order"),ie=require("@stdlib/assert-has-own-property"),_=require("@stdlib/array-base-assert-contains"),ae=require("@stdlib/array-base-filled-by"),A=require("@stdlib/array-base-every-by"),O=require("@stdlib/array-base-join"),ne=require("@stdlib/strided-base-nullary"),I=require("@stdlib/ndarray-base-unary"),z=require("@stdlib/ndarray-base-maybe-broadcast-array"),N=require("@stdlib/ndarray-base-broadcast-scalar"),p=require("@stdlib/ndarray-base-shape2strides"),ue=require("@stdlib/ndarray-base-unary-output-dtype"),oe=require("@stdlib/ndarray-base-numel"),h=require("@stdlib/ndarray-base-buffer"),w=require("@stdlib/ndarray-shape"),j=require("@stdlib/ndarray-dtype"),V=require("@stdlib/ndarray-order"),T=require("@stdlib/ndarray-ctor"),se=require("@stdlib/ndarray-defaults"),le=require("@stdlib/array-base-assert-is-accessor-array"),ve=require("@stdlib/array-base-accessor-setter"),de=require("@stdlib/array-base-setter"),o=require("@stdlib/string-format"),fe=L();function g(n,r,e,i,u){var t;if(!(this instanceof g))return arguments.length<5?new g(n,r,e,i):new g(n,r,e,i,u);if(!Y(n))throw new TypeError(o("invalid argument. First argument must be a function. Value: `%s`.",n));if(!P(r)||r.length<1||!A(r,C))throw new TypeError(o("invalid argument. Second argument must be an array of data types. Value: `%s`.",r));if(!P(e)||e.length<1||!A(e,C))throw new TypeError(o("invalid argument. Third argument must be an array of data types. Value: `%s`.",e));if(!$(i))throw new TypeError(o("invalid argument. Fourth argument must be an object. Value: `%s`.",i));if(!ee(i.output))throw new TypeError(o("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",i.output));if(t={order:se.get("order")},arguments.length>4){if(!Z(u))throw new TypeError(o("invalid argument. Options argument must be an object. Value: `%s`.",u));if(ie(u,"order")&&(t.order=u.order,!te(t.order)))throw new TypeError(o("invalid option. `%s` option must be a valid memory layout. Option: `%s`.","order",t.order))}return this._prng=n,this._idtypes=r,this._odtypes=e,this._policies={output:i.output},this._opts=t,this}R(g.prototype,"generate",function(r,e,i){var u,t,s,c,d,l,y,q,b,a,f,S,v;if(!W(r)&&!X(r))throw new TypeError(o("invalid argument. First argument must be an array-like object containing nonnegative integers. Value: `%s`.",r));if(t={},arguments.length>2&&(c=fe(t,this._odtypes,i),c))throw c;if(B(e))v=e,a="float64",y=!0;else if(G(e))v=e,v.byteLength===8?a="complex64":a="complex128",y=!0;else if(E(e))a=j(e),S=w(e),S.length===0?(v=e.get(),y=!0):(v=z(e,r),y=!1);else throw new TypeError(o("invalid argument. Second argument must be either a scalar or an ndarray-like object. Value: `%s`.",e));if(!_(this._idtypes,a))throw new TypeError(o('invalid argument. Second argument must have one of the following data types: "%s". Data type: `%s`.',O(this._idtypes,'", "'),a));if(u=this._prng,a=t.dtype||ue(a,this._policies.output),t.order?l=t.order:y?l=this._opts.order:l=V(v),d=oe(r),d===0)return r.length===0?(s=h(a,1),le(s)?b=ve(a):b=de(a),b(s,0,u(v)),f=[0]):(s=h(a,d),f=p(r,l)),new T(a,s,r,f,0,l,t);if(y)return a==="generic"?s=ae(d,x):(s=h(a,d),ne([s],[d],[1],x)),f=p(r,l),new T(a,s,r,f,0,l,t);return s=h(a,d),f=p(r,l),q=new T(a,s,r,f,0,l,t),I([v,q],u),q;function x(){return u(e)}});R(g.prototype,"assign",function(r,e){var i,u,t;if(!E(e))throw new TypeError(o("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",e));if(re(e))throw new Error("invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.");if(B(r))i="float64",t=N(r,i,w(e),V(e));else if(G(r))r.byteLength===8?i="complex64":i="complex128",t=N(r,i,w(e),V(e));else if(E(r))i=j(r),t=z(r,w(e));else throw new TypeError(o("invalid argument. First argument must be either a scalar or an ndarray-like object. Value: `%s`.",r));if(!_(this._idtypes,i))throw new TypeError(o('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',O(this._idtypes,'", "'),i));if(u=j(e),!_(this._odtypes,u))throw new TypeError(o('invalid argument. Second argument must have one of the following data types: "%s". Data type: `%s`.',O(this._odtypes,'", "'),u));return I([t,e],this._prng),e});H.exports=g});var ye=J();module.exports=ye;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
