"use strict";var F=function(n,r){return function(){return r||n((r={exports:{}}).exports,r),r.exports}};var k=F(function(me,P){"use strict";var K=require("@stdlib/assert-is-plain-object"),m=require("@stdlib/assert-has-own-property"),M=require("@stdlib/array-base-assert-contains"),Q=require("@stdlib/array-base-join"),L=require("@stdlib/string-format");function U(n,r,e){return K(e)?m(e,"dtype")&&(n.dtype=e.dtype,!M(r,n.dtype))?new TypeError(L('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"dtype",Q(r,'", "'),n.dtype)):(m(e,"order")&&(n.order=e.order),m(e,"mode")&&(n.mode=e.mode),m(e,"submode")&&(n.submode=e.submode),m(e,"readonly")&&(n.readonly=e.readonly),null):new TypeError(L("invalid argument. Options argument must be an object. Value: `%s`.",e))}P.exports=U});var J=F(function(he,H){"use strict";var R=require("@stdlib/utils-define-nonenumerable-read-only-property"),W=require("@stdlib/assert-is-nonnegative-integer-array").primitives,X=require("@stdlib/assert-is-empty-collection"),O=require("@stdlib/assert-is-ndarray-like"),B=require("@stdlib/assert-is-number").isPrimitive,Y=require("@stdlib/assert-is-function"),G=require("@stdlib/assert-is-complex-like"),Z=require("@stdlib/assert-is-plain-object"),$=require("@stdlib/assert-is-object"),C=require("@stdlib/assert-is-collection"),A=require("@stdlib/ndarray-base-assert-is-data-type"),ee=require("@stdlib/ndarray-base-assert-is-output-data-type-policy"),re=require("@stdlib/ndarray-base-assert-is-read-only"),te=require("@stdlib/ndarray-base-assert-is-order"),ie=require("@stdlib/assert-has-own-property"),j=require("@stdlib/array-base-assert-contains"),ae=require("@stdlib/array-base-filled-by"),N=require("@stdlib/array-base-every-by"),V=require("@stdlib/array-base-join"),ne=require("@stdlib/strided-base-nullary"),I=require("@stdlib/ndarray-base-unary"),z=require("@stdlib/ndarray-base-maybe-broadcast-array"),T=require("@stdlib/ndarray-base-broadcast-scalar"),E=require("@stdlib/ndarray-base-shape2strides"),ue=require("@stdlib/ndarray-base-unary-output-dtype"),oe=require("@stdlib/ndarray-base-numel"),q=require("@stdlib/ndarray-base-buffer"),h=require("@stdlib/ndarray-shape"),x=require("@stdlib/ndarray-dtype"),w=require("@stdlib/ndarray-order"),_=require("@stdlib/ndarray-ctor"),se=require("@stdlib/ndarray-defaults"),le=require("@stdlib/array-base-assert-is-accessor-array"),ve=require("@stdlib/array-base-accessor-setter"),de=require("@stdlib/array-base-setter"),o=require("@stdlib/string-format"),fe=k();function g(n,r,e,t,u){var i;if(!(this instanceof g))return arguments.length<5?new g(n,r,e,t):new g(n,r,e,t,u);if(!Y(n))throw new TypeError(o("invalid argument. First argument must be a function. Value: `%s`.",n));if(!C(r)||r.length<1||!N(r,A))throw new TypeError(o("invalid argument. Second argument must be an array of data types. Value: `%s`.",r));if(!C(e)||e.length<1||!N(e,A))throw new TypeError(o("invalid argument. Third argument must be an array of data types. Value: `%s`.",e));if(!$(t))throw new TypeError(o("invalid argument. Fourth argument must be an object. Value: `%s`.",t));if(!ee(t.output))throw new TypeError(o("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",t.output));if(i={order:se.get("order")},arguments.length>4){if(!Z(u))throw new TypeError(o("invalid argument. Options argument must be an object. Value: `%s`.",u));if(ie(u,"order")&&(i.order=u.order,!te(i.order)))throw new TypeError(o("invalid option. `%s` option must be a valid memory layout. Option: `%s`.","order",i.order))}return this._prng=n,this._idtypes=r,this._odtypes=e,this._policies={output:t.output},this._opts=i,this}R(g.prototype,"generate",function(r,e,t){var u,i,s,c,d,v,f,b,p,a,y,S,l;if(!W(r)&&!X(r))throw new TypeError(o("invalid argument. First argument must be an array-like object containing nonnegative integers. Value: `%s`.",r));if(i={},arguments.length>2&&(c=fe(i,this._odtypes,t),c))throw c;if(B(e)?(l=e,a="float64",f=!0):G(e)?(l=e,l.byteLength===8?a="complex64":a="complex128",f=!0):O(e)?(a=x(e),S=h(e),S.length===0?(l=e.get(),f=!0):(l=z(e,r),f=!1)):(l=e,a="generic",f=!0),!j(this._idtypes,a))throw new TypeError(o('invalid argument. Second argument must have one of the following data types: "%s". Data type: `%s`.',V(this._idtypes,'", "'),a));if(u=this._prng,a=i.dtype||ue(a,this._policies.output),i.order?v=i.order:f?v=this._opts.order:v=w(l),d=oe(r),d===0)return r.length===0?(s=q(a,1),le(s)?p=ve(a):p=de(a),p(s,0,u(l)),y=[0]):(s=q(a,d),y=E(r,v)),new _(a,s,r,y,0,v,i);if(f)return a==="generic"?s=ae(d,D):(s=q(a,d),ne([s],[d],[1],D)),y=E(r,v),new _(a,s,r,y,0,v,i);return s=q(a,d),y=E(r,v),b=new _(a,s,r,y,0,v,i),I([l,b],u),b;function D(){return u(l)}});R(g.prototype,"assign",function(r,e){var t,u,i;if(!O(e))throw new TypeError(o("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",e));if(re(e))throw new Error("invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.");if(B(r)?(t="float64",i=T(r,t,h(e),w(e))):G(r)?(r.byteLength===8?t="complex64":t="complex128",i=T(r,t,h(e),w(e))):O(r)?(t=x(r),i=z(r,h(e))):(t="generic",i=T(r,t,h(e),w(e))),!j(this._idtypes,t))throw new TypeError(o('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',V(this._idtypes,'", "'),t));if(u=x(e),!j(this._odtypes,u))throw new TypeError(o('invalid argument. Second argument must have one of the following data types: "%s". Data type: `%s`.',V(this._odtypes,'", "'),u));return I([i,e],this._prng),e});H.exports=g});var ye=J();module.exports=ye;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
